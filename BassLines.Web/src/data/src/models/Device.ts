/* tslint:disable */
/* eslint-disable */
/**
 * BassLines
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Device
 */
export interface Device {
    /**
     * 
     * @type {string}
     * @memberof Device
     */
    id?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Device
     */
    isActive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Device
     */
    isPrivateSession?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Device
     */
    isRestricted?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Device
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Device
     */
    type?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Device
     */
    volumePercent?: number | null;
}

export function DeviceFromJSON(json: any): Device {
    return DeviceFromJSONTyped(json, false);
}

export function DeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Device {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isActive': !exists(json, 'is_active') ? undefined : json['is_active'],
        'isPrivateSession': !exists(json, 'is_private_session') ? undefined : json['is_private_session'],
        'isRestricted': !exists(json, 'is_restricted') ? undefined : json['is_restricted'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'volumePercent': !exists(json, 'volume_percent') ? undefined : json['volume_percent'],
    };
}

export function DeviceToJSON(value?: Device | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'is_active': value.isActive,
        'is_private_session': value.isPrivateSession,
        'is_restricted': value.isRestricted,
        'name': value.name,
        'type': value.type,
        'volume_percent': value.volumePercent,
    };
}

