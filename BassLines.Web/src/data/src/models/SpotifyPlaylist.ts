/* tslint:disable */
/* eslint-disable */
/**
 * BassLines
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExternalUrls,
    ExternalUrlsFromJSON,
    ExternalUrlsFromJSONTyped,
    ExternalUrlsToJSON,
} from './ExternalUrls';
import {
    Image,
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './Image';
import {
    PlaylistOwner,
    PlaylistOwnerFromJSON,
    PlaylistOwnerFromJSONTyped,
    PlaylistOwnerToJSON,
} from './PlaylistOwner';
import {
    TrackListReference,
    TrackListReferenceFromJSON,
    TrackListReferenceFromJSONTyped,
    TrackListReferenceToJSON,
} from './TrackListReference';

/**
 * 
 * @export
 * @interface SpotifyPlaylist
 */
export interface SpotifyPlaylist {
    /**
     * 
     * @type {boolean}
     * @memberof SpotifyPlaylist
     */
    collaborative?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    description?: string | null;
    /**
     * 
     * @type {ExternalUrls}
     * @memberof SpotifyPlaylist
     */
    externalUrls?: ExternalUrls;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    href?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    id?: string | null;
    /**
     * 
     * @type {Array<Image>}
     * @memberof SpotifyPlaylist
     */
    images?: Array<Image> | null;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    name?: string | null;
    /**
     * 
     * @type {PlaylistOwner}
     * @memberof SpotifyPlaylist
     */
    owner?: PlaylistOwner;
    /**
     * 
     * @type {any}
     * @memberof SpotifyPlaylist
     */
    primaryColor?: any | null;
    /**
     * 
     * @type {boolean}
     * @memberof SpotifyPlaylist
     */
    _public?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    snapshotId?: string | null;
    /**
     * 
     * @type {TrackListReference}
     * @memberof SpotifyPlaylist
     */
    tracks?: TrackListReference;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SpotifyPlaylist
     */
    uri?: string | null;
}

export function SpotifyPlaylistFromJSON(json: any): SpotifyPlaylist {
    return SpotifyPlaylistFromJSONTyped(json, false);
}

export function SpotifyPlaylistFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpotifyPlaylist {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collaborative': !exists(json, 'collaborative') ? undefined : json['collaborative'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'externalUrls': !exists(json, 'external_urls') ? undefined : ExternalUrlsFromJSON(json['external_urls']),
        'href': !exists(json, 'href') ? undefined : json['href'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'images': !exists(json, 'images') ? undefined : (json['images'] === null ? null : (json['images'] as Array<any>).map(ImageFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'owner': !exists(json, 'owner') ? undefined : PlaylistOwnerFromJSON(json['owner']),
        'primaryColor': !exists(json, 'primary_color') ? undefined : json['primary_color'],
        '_public': !exists(json, 'public') ? undefined : json['public'],
        'snapshotId': !exists(json, 'snapshot_id') ? undefined : json['snapshot_id'],
        'tracks': !exists(json, 'tracks') ? undefined : TrackListReferenceFromJSON(json['tracks']),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
    };
}

export function SpotifyPlaylistToJSON(value?: SpotifyPlaylist | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collaborative': value.collaborative,
        'description': value.description,
        'external_urls': ExternalUrlsToJSON(value.externalUrls),
        'href': value.href,
        'id': value.id,
        'images': value.images === undefined ? undefined : (value.images === null ? null : (value.images as Array<any>).map(ImageToJSON)),
        'name': value.name,
        'owner': PlaylistOwnerToJSON(value.owner),
        'primary_color': value.primaryColor,
        'public': value._public,
        'snapshot_id': value.snapshotId,
        'tracks': TrackListReferenceToJSON(value.tracks),
        'type': value.type,
        'uri': value.uri,
    };
}

