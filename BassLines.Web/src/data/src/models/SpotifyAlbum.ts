/* tslint:disable */
/* eslint-disable */
/**
 * BassLines
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Image,
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './Image';
import {
    SpotifyBase,
    SpotifyBaseFromJSON,
    SpotifyBaseFromJSONTyped,
    SpotifyBaseToJSON,
} from './SpotifyBase';

/**
 * 
 * @export
 * @interface SpotifyAlbum
 */
export interface SpotifyAlbum {
    /**
     * 
     * @type {string}
     * @memberof SpotifyAlbum
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SpotifyAlbum
     */
    spotifyId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SpotifyAlbum
     */
    link?: string | null;
    /**
     * 
     * @type {Array<Image>}
     * @memberof SpotifyAlbum
     */
    images?: Array<Image> | null;
    /**
     * 
     * @type {SpotifyBase}
     * @memberof SpotifyAlbum
     */
    artist?: SpotifyBase;
    /**
     * 
     * @type {Date}
     * @memberof SpotifyAlbum
     */
    releaseDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof SpotifyAlbum
     */
    trackCount?: number | null;
}

export function SpotifyAlbumFromJSON(json: any): SpotifyAlbum {
    return SpotifyAlbumFromJSONTyped(json, false);
}

export function SpotifyAlbumFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpotifyAlbum {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'spotifyId': !exists(json, 'spotifyId') ? undefined : json['spotifyId'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'images': !exists(json, 'images') ? undefined : (json['images'] === null ? null : (json['images'] as Array<any>).map(ImageFromJSON)),
        'artist': !exists(json, 'artist') ? undefined : SpotifyBaseFromJSON(json['artist']),
        'releaseDate': !exists(json, 'releaseDate') ? undefined : (json['releaseDate'] === null ? null : new Date(json['releaseDate'])),
        'trackCount': !exists(json, 'trackCount') ? undefined : json['trackCount'],
    };
}

export function SpotifyAlbumToJSON(value?: SpotifyAlbum | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'spotifyId': value.spotifyId,
        'link': value.link,
        'images': value.images === undefined ? undefined : (value.images === null ? null : (value.images as Array<any>).map(ImageToJSON)),
        'artist': SpotifyBaseToJSON(value.artist),
        'releaseDate': value.releaseDate === undefined ? undefined : (value.releaseDate === null ? null : value.releaseDate.toISOString()),
        'trackCount': value.trackCount,
    };
}

