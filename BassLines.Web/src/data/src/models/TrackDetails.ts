/* tslint:disable */
/* eslint-disable */
/**
 * BassLines
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AlbumRoot,
    AlbumRootFromJSON,
    AlbumRootFromJSONTyped,
    AlbumRootToJSON,
} from './AlbumRoot';
import {
    ArtistDetails,
    ArtistDetailsFromJSON,
    ArtistDetailsFromJSONTyped,
    ArtistDetailsToJSON,
} from './ArtistDetails';
import {
    ExternalIds,
    ExternalIdsFromJSON,
    ExternalIdsFromJSONTyped,
    ExternalIdsToJSON,
} from './ExternalIds';
import {
    ExternalUrls,
    ExternalUrlsFromJSON,
    ExternalUrlsFromJSONTyped,
    ExternalUrlsToJSON,
} from './ExternalUrls';
import {
    LinkedFrom,
    LinkedFromFromJSON,
    LinkedFromFromJSONTyped,
    LinkedFromToJSON,
} from './LinkedFrom';
import {
    Restrictions,
    RestrictionsFromJSON,
    RestrictionsFromJSONTyped,
    RestrictionsToJSON,
} from './Restrictions';

/**
 * 
 * @export
 * @interface TrackDetails
 */
export interface TrackDetails {
    /**
     * 
     * @type {string}
     * @memberof TrackDetails
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackDetails
     */
    href?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackDetails
     */
    uri?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TrackDetails
     */
    name?: string | null;
    /**
     * 
     * @type {Array<ArtistDetails>}
     * @memberof TrackDetails
     */
    artists?: Array<ArtistDetails> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackDetails
     */
    availableMarkets?: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof TrackDetails
     */
    discNumber?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TrackDetails
     */
    durationMs?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof TrackDetails
     */
    explicit?: boolean;
    /**
     * 
     * @type {ExternalUrls}
     * @memberof TrackDetails
     */
    externalUrls?: ExternalUrls;
    /**
     * 
     * @type {boolean}
     * @memberof TrackDetails
     */
    isPlayable?: boolean;
    /**
     * 
     * @type {LinkedFrom}
     * @memberof TrackDetails
     */
    linkedFrom?: LinkedFrom;
    /**
     * 
     * @type {Restrictions}
     * @memberof TrackDetails
     */
    restrictions?: Restrictions;
    /**
     * 
     * @type {string}
     * @memberof TrackDetails
     */
    previewUrl?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TrackDetails
     */
    trackNumber?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TrackDetails
     */
    type?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof TrackDetails
     */
    isLocal?: boolean;
    /**
     * 
     * @type {AlbumRoot}
     * @memberof TrackDetails
     */
    album?: AlbumRoot;
    /**
     * 
     * @type {ExternalIds}
     * @memberof TrackDetails
     */
    externalIds?: ExternalIds;
    /**
     * 
     * @type {number}
     * @memberof TrackDetails
     */
    popularity?: number | null;
}

export function TrackDetailsFromJSON(json: any): TrackDetails {
    return TrackDetailsFromJSONTyped(json, false);
}

export function TrackDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'href': !exists(json, 'href') ? undefined : json['href'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'artists': !exists(json, 'artists') ? undefined : (json['artists'] === null ? null : (json['artists'] as Array<any>).map(ArtistDetailsFromJSON)),
        'availableMarkets': !exists(json, 'available_markets') ? undefined : json['available_markets'],
        'discNumber': !exists(json, 'disc_number') ? undefined : json['disc_number'],
        'durationMs': !exists(json, 'duration_ms') ? undefined : json['duration_ms'],
        'explicit': !exists(json, 'explicit') ? undefined : json['explicit'],
        'externalUrls': !exists(json, 'external_urls') ? undefined : ExternalUrlsFromJSON(json['external_urls']),
        'isPlayable': !exists(json, 'is_playable') ? undefined : json['is_playable'],
        'linkedFrom': !exists(json, 'linked_from') ? undefined : LinkedFromFromJSON(json['linked_from']),
        'restrictions': !exists(json, 'restrictions') ? undefined : RestrictionsFromJSON(json['restrictions']),
        'previewUrl': !exists(json, 'preview_url') ? undefined : json['preview_url'],
        'trackNumber': !exists(json, 'track_number') ? undefined : json['track_number'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'isLocal': !exists(json, 'is_local') ? undefined : json['is_local'],
        'album': !exists(json, 'album') ? undefined : AlbumRootFromJSON(json['album']),
        'externalIds': !exists(json, 'external_ids') ? undefined : ExternalIdsFromJSON(json['external_ids']),
        'popularity': !exists(json, 'popularity') ? undefined : json['popularity'],
    };
}

export function TrackDetailsToJSON(value?: TrackDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'href': value.href,
        'uri': value.uri,
        'name': value.name,
        'artists': value.artists === undefined ? undefined : (value.artists === null ? null : (value.artists as Array<any>).map(ArtistDetailsToJSON)),
        'available_markets': value.availableMarkets,
        'disc_number': value.discNumber,
        'duration_ms': value.durationMs,
        'explicit': value.explicit,
        'external_urls': ExternalUrlsToJSON(value.externalUrls),
        'is_playable': value.isPlayable,
        'linked_from': LinkedFromToJSON(value.linkedFrom),
        'restrictions': RestrictionsToJSON(value.restrictions),
        'preview_url': value.previewUrl,
        'track_number': value.trackNumber,
        'type': value.type,
        'is_local': value.isLocal,
        'album': AlbumRootToJSON(value.album),
        'external_ids': ExternalIdsToJSON(value.externalIds),
        'popularity': value.popularity,
    };
}

