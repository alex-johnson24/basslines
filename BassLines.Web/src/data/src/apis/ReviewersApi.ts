/* tslint:disable */
/* eslint-disable */
/**
 * BassLines
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    UserModel,
    UserModelFromJSON,
    UserModelToJSON,
} from '../models';

/**
 * 
 */
export class ReviewersApi extends runtime.BaseAPI {

    /**
     */
    async apiReviewersActiveGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<UserModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Reviewers/Active`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserModelFromJSON(jsonValue));
    }

    /**
     */
    async apiReviewersActiveGet(initOverrides?: RequestInit): Promise<UserModel> {
        const response = await this.apiReviewersActiveGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiReviewersGetReviewerQueueGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<UserModel>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Reviewers/GetReviewerQueue`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserModelFromJSON));
    }

    /**
     */
    async apiReviewersGetReviewerQueueGet(initOverrides?: RequestInit): Promise<Array<UserModel>> {
        const response = await this.apiReviewersGetReviewerQueueGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiReviewersRebuildReviewerQueueGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Reviewers/RebuildReviewerQueue`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiReviewersRebuildReviewerQueueGet(initOverrides?: RequestInit): Promise<void> {
        await this.apiReviewersRebuildReviewerQueueGetRaw(initOverrides);
    }

    /**
     */
    async apiReviewersRotateReviewerGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Reviewers/RotateReviewer`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiReviewersRotateReviewerGet(initOverrides?: RequestInit): Promise<void> {
        await this.apiReviewersRotateReviewerGetRaw(initOverrides);
    }

}
